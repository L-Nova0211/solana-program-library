name: Token Swap Pull Request

on:
  pull_request:
    paths:
    - 'token-swap/**'
    - 'token/**'
    - 'libraries/math/**'
  push:
    branches: [master]
    paths:
    - 'token-swap/**'
    - 'token/**'
    - 'libraries/math/**'

jobs:
  cargo-test-bpf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source ci/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source ci/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE}}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/rustfilt
          key: cargo-bpf-bins-${{ runner.os }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ env.SOLANA_VERSION }}

      - name: Install dependencies
        run: |
          ./ci/install-build-deps.sh
          ./ci/install-program-deps.sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build and test
        run: ./ci/cargo-test-bpf.sh token-swap

      - name: Build production version
        run: |
          cargo +"$RUST_STABLE" build-bpf \
            --manifest-path=token-swap/program/Cargo.toml \
            --features production \
            --bpf-out-dir target/deploy-production
        env:
          SWAP_PROGRAM_OWNER_FEE_ADDRESS: HfoTxFR1Tm6kGmWgYWD6J7YHVy1UwqSULUGVLXkJqaKN

      - name: Move production version for upload
        run: |
          mv target/deploy-production/spl_token_swap.so target/deploy/spl_token_swap_production.so

      - name: Upload programs
        uses: actions/upload-artifact@v2
        with:
          name: token-swap-programs
          path: "target/deploy/*.so"
          if-no-files-found: error

  js-test:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 12.x
    needs: cargo-test-bpf
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-${{ hashFiles('token-swap/js/package-lock.json') }}
          restore-keys: |
            node-
      - name: Download programs
        uses: actions/download-artifact@v2
        with:
          name: token-swap-programs
          path: target/deploy
      - run: ./ci/js-test-token-swap.sh

  fuzz:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source ci/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source ci/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: token-swap-fuzz-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/cargo-hfuzz
            ~/.cargo/bin/cargo-honggfuzz
          key: cargo-fuzz-bins-${{ runner.os }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ env.SOLANA_VERSION }}
          restore-keys: |
            solana-

      - name: Install dependencies
        run: |
          ./ci/install-build-deps.sh
          ./ci/install-program-deps.sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Run fuzz target
        run: ./ci/fuzz.sh token-swap-instructions 30 # 30 seconds, just to check everything is ok
